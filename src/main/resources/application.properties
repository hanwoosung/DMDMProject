spring.application.name=dmdm
server.port=8090
# **# JPA**

spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true

# **# MariaDB set**

spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_USERNAME}
spring.datasource.password=${SPRING_USERPW}

#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
#spring.datasource.url=jdbc:mariadb://localhost:3306/mydb
#spring.datasource.username=root
#spring.datasource.password=1234

# **# Mybatis**

mybatis.mapper-locations=classpath:mapper/**/*.xml

mybatis.configuration.map-underscore-to-camel-case=true

# **# security**

logging.level.org.springframework.security=DEBUG

file.upload-dir=C:/dmdm_file
front.file-dir=http://localhost:8090/file/

# Kafka Consumer Config
spring.kafka.consumer.bootstrap-servers=192.168.0.224:9092
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.enable-auto-commit=false

# Consumer Group IDs
spring.kafka.consumer.group-id=notifications

# Kafka Topics
kafka.topic.comment-write=comment-write
kafka.topic.emoticon-buy=emoticon-buy
kafka.topic.message-send=message-send
kafka.topic.fight-send=fight-send
kafka.topic.partitions=10
kafka.topic.replicas=1

# Kafka Producer Config
spring.kafka.producer.bootstrap-servers=192.168.0.224:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer



# Recaptcha
recaptcha.secret.key=6Ld5aMAqAAAAANJW-irbR82Q2boSmDWSjEjNKVLR
recaptcha.url=https://www.google.com/recaptcha/api/siteverify

#jwt
spring.jwt.secret=${JWT_KEY}

#redis
spring.data.redis.host=192.168.0.250
spring.data.redis.port=6379

##registration
#spring.security.oauth2.client.registration.????.client-name=????
#spring.security.oauth2.client.registration.????.client-id=????? ?? ?? ???
#spring.security.oauth2.client.registration.????.client-secret=????? ?? ?? ????
#spring.security.oauth2.client.registration.????.redirect-uri=???? ??? ??? ??? ?? URI
#spring.security.oauth2.client.registration.????.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.????.scope=??? ???? ??? ??? ??
#
##provider
#spring.security.oauth2.client.provider.????.authorization-uri=??? ??? ? ??
#spring.security.oauth2.client.provider.????.token-uri=?? ?? ?? ??
#spring.security.oauth2.client.provider.????.user-info-uri=??? ?? ?? ??
#spring.security.oauth2.client.provider.????.user-name-attribute=?? ??? ??

#registration naver
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.client-id=${NAVER_ID}
spring.security.oauth2.client.registration.naver.client-secret=${NAVER_KEY}
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8090/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email

#registration github
spring.security.oauth2.client.registration.github.client-name=github
spring.security.oauth2.client.registration.github.client-id=${GITHUB_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_KEY}
spring.security.oauth2.client.registration.github.redirect-uri=http://localhost:8090/login/oauth2/code/github
spring.security.oauth2.client.registration.github.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.github.scope=read:user,read:email

#registration kakao
spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_ID}
spring.security.oauth2.client.registration.kakao.client-secret=${KAKAO_KEY}
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8090/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email


#registration google
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_KEY}
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8090/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=profile,email,https://www.googleapis.com/auth/user.birthday.read

#provider naver
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

#provider kakao
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id