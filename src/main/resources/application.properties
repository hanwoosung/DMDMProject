spring.application.name=dmdm
server.port=8090
# **# JPA**

spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true

# **# MariaDB set**
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_USERNAME}
spring.datasource.password=${SPRING_USERPW}

#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
#spring.datasource.url=jdbc:mariadb://localhost:3306/mydb
#spring.datasource.username=root
#spring.datasource.password=1234

# **# Mybatis**

mybatis.mapper-locations=classpath:mapper/**/*.xml

mybatis.configuration.map-underscore-to-camel-case=true

# **# security**

logging.level.org.springframework.security=DEBUG

file.upload-dir=C:/dmdm_file
front.file-dir=http://localhost:8090/file/

# Kafka Consumer Config
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.error-handler.dead-letter-topic=dead-letter-topic

# Consumer Group IDs
spring.kafka.consumer.group-id = notifications

# Kafka topics
kafka.topic.comment-write=comment-write
kafka.topic.emoticon-buy=emoticon-buy
kafka.topic.message-send=message-send
kafka.topic.fight-send=fight-send

# Kafka Producer Config
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer


# Recaptcha
recaptcha.secret.key=6Ld5aMAqAAAAANJW-irbR82Q2boSmDWSjEjNKVLR
recaptcha.url=https://www.google.com/recaptcha/api/siteverify

#jwt
spring.jwt.secret=ghkdtmdguszjavjsldmlghkdtmdgusdlsepghkdtmdgusdlqslekgkgkgk

#redis
spring.data.redis.host=localhost
spring.data.redis.port=6379

##registration
#spring.security.oauth2.client.registration.????.client-name=????
#spring.security.oauth2.client.registration.????.client-id=????? ?? ?? ???
#spring.security.oauth2.client.registration.????.client-secret=????? ?? ?? ????
#spring.security.oauth2.client.registration.????.redirect-uri=???? ??? ??? ??? ?? URI
#spring.security.oauth2.client.registration.????.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.????.scope=??? ???? ??? ??? ??
#
##provider
#spring.security.oauth2.client.provider.????.authorization-uri=??? ??? ? ??
#spring.security.oauth2.client.provider.????.token-uri=?? ?? ?? ??
#spring.security.oauth2.client.provider.????.user-info-uri=??? ?? ?? ??
#spring.security.oauth2.client.provider.????.user-name-attribute=?? ??? ??

#registration naver
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.client-id=voHztvHjzztno0bL9V0T
spring.security.oauth2.client.registration.naver.client-secret=m8OUzYwj3F
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8090/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email

#registration google
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=483989153790-3ahmodc4f4sjunjuidj2pa6gn1hf46mq.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8090/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=profile,email,

#provider naver
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response